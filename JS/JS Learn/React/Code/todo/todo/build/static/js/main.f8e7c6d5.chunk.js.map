{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/filter-panel/index.js","components/filter-panel/filter-panel.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/todo-widget/index.js","components/todo-widget/todo-widget.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","className","Component","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","aria-label","this","onChange","TodoListItem","label","itemId","onDeleted","onToggleImportant","onToggleDone","important","textClassNames","importantClassNames","done","replace","key","onClick","TodoList","todos","elements","map","item","id","itemProps","FilterPanel","buttons","name","filter","onFilterChange","buttonClass","data-toggle","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","aria-hidden","TodoWidget","toDo","App","maxId","todoData","createTodoItem","onItemDelete","idx","findIndex","el","slice","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8e7c6d5.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\n\nexport default AppHeader","import React, {Component} from \"react\";\n\nexport default class AppHeader extends Component {\n    render() {\n        return (\n            <h1 className=\"h5 text-dark text-center\">Todo List</h1>\n        )\n    }\n};\n","import SearchPanel from \"./search-panel\";\n\nexport default SearchPanel","import React, {Component} from \"react\";\n\nimport './search-panel.css'\n\nexport default class SearchPanel extends Component {\n    state = {\n        term: ''\n    };\n    onSearchChange = (e) => {\n        const term = e.target.value;\n        this.setState({term});\n        this.props.onSearchChange(term);\n    };\n\n    render() {\n        return (\n            <div className=\"row mt-3\">\n                <div className=\"col\">\n                    <div className=\"md-form active-pink active-pink-2 mb-3 mt-0\">\n                        <input className=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"\n                               value={this.state.term}\n                               onChange={this.onSearchChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport './todo-list-item.css'\n\nexport default class TodoListItem extends Component {\n    render() {\n        const {label, itemId, onDeleted, onToggleImportant, onToggleDone, important, done} = this.props;\n        let textClassNames = \"d-flex align-items-center form-check-label h-100 w-100 ml-2\";\n        let importantClassNames = \"d-flex justify-content-center align-items-center far fa-star\";\n\n        if (done) {\n            textClassNames += \" done\";\n        }\n        if (important) {\n            textClassNames += \" important\";\n            importantClassNames += \" important\";\n            importantClassNames = importantClassNames.replace('far', 'fas');\n        }\n\n        return (\n            <div className=\"row todo-list m-1 todo-list-item\">\n                <div className=\"form-check col-8 p-0 list-group-item waves-effect\">\n                    <span\n                        className={textClassNames}\n                        key={itemId}\n                        onClick={onToggleDone}>\n                        {label}\n                    </span>\n                </div>\n                <div className=\"col\">\n                    <div className=\"row h-100\">\n                        <div className=\"col-6 p-2 list-group-item waves-effect\" onClick={onToggleImportant}>\n                            <span className={importantClassNames}/>\n                        </div>\n                        <div className=\"col-6 p-2 list-group-item waves-effect\" onClick={onDeleted}>\n                            <span className=\"w-100 h-100 d-flex justify-content-center align-items-center fas fa-trash-alt\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n};","import TodoList from \"./todo-list\";\n\nexport default TodoList","import React, {Component} from \"react\";\n\nimport TodoListItem from \"../todo-list-item/todo-list-item\";\nimport './todo-list.css'\n\nexport default class TodoList extends Component {\n    render() {\n        const {todos, onDeleted, onToggleImportant, onToggleDone} = this.props;\n        const elements = todos.map((item) => {\n            const {id, ...itemProps} = item;\n            return (\n                <TodoListItem\n                    itemId={id}\n                    {...itemProps}\n                    onDeleted={() => onDeleted(id)}\n                    onToggleImportant={() => onToggleImportant(id)}\n                    onToggleDone={() => onToggleDone(id)}\n                />\n            )\n        });\n        return (\n            <div className=\"row mt-3\">\n                <div className=\"col\">\n                    <ul className=\"list-group\">\n                        {elements}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n","import FilterPanel from \"./filter-panel\";\n\nexport default FilterPanel","import React, {Component} from \"react\";\nimport './filter-panel.css'\n\nexport default class FilterPanel extends Component {\n    buttons = [\n        {name: 'active', label: 'fas fa-list'},\n        {name: 'important', label: 'fas fa-star'},\n        {name: 'done', label: 'fas fa-check'},\n    ];\n\n\n    render() {\n        const {filter, onFilterChange} = this.props;\n        const buttons = this.buttons.map(({name, label}) => {\n            const isActive = filter === name;\n            const buttonClass = isActive ? 'btn-filter-active' : 'btn-filter-disabled';\n            return (\n                <button type=\"button\" className={`btn btn-filter  w-100 ${buttonClass}`}\n                        key={name}\n                        onClick={()=>onFilterChange(name)}>\n                    <i className={label}/>\n                </button>\n            )\n        });\n        return (\n            <div className=\"row\">\n                <div className=\"col\">\n                    <div className=\"btn-group w-100\" data-toggle=\"buttons\">\n                        {buttons}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n","import ItemAddForm from \"./item-add-form\";\n\nexport default ItemAddForm","import React, {Component} from \"react\";\nimport './item-add-form.css'\n\nexport default class ItemAddForm extends Component {\n    state = {\n        label: ''\n    };\n    onLabelChange = (e) => {\n        this.setState({\n            label: e.target.value\n        })\n    };\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.onItemAdded(this.state.label);\n        this.setState({\n            label: ''\n        })\n    };\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col\">\n                    <form className=\"add-new-panel md-form active-pink active-pink-2 mb-3 mt-0 d-flex\"\n                    onSubmit={this.onSubmit}\n                    >\n                        <input className=\"form-control m-0\" type=\"text\" placeholder=\"Add New\" aria-label=\"Add New\"\n                               onChange={this.onLabelChange}\n                        value={this.state.label}/>\n                        <div className=\"input-group-append\">\n                            <button\n                                className=\"border-0 input-group-text primary-color text-white lighten-3 waves-effect\">\n                                <i className=\"fas fa-plus\" aria-hidden=\"true\"/>\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n};","import TodoWidget from \"./todo-widget\";\n\nexport default TodoWidget","import React, {Component} from \"react\";\n\nexport default class TodoWidget extends Component {\n    render() {\n        const {toDo, done} = this.props;\n        return (\n            <div className=\"row mt-2\">\n                <div className=\"col\">\n                    <p className=\"text-black-50 text-center\">{toDo} more to do, {done} done</p>\n                </div>\n            </div>\n        )\n    }\n}","import App from './app'\n\nexport default App","import React, {Component} from 'react';\n\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport TodoList from \"../todo-list\";\nimport FilterPanel from \"../filter-panel\";\nimport ItemAddForm from \"../item-add-form\";\nimport TodoWidget from \"../todo-widget\";\n\nexport default class App extends Component {\n    maxId = 0;\n    state = {\n        todoData: [\n            this.createTodoItem('A'),\n            this.createTodoItem('B'),\n            this.createTodoItem('C'),\n            this.createTodoItem('D'),\n        ],\n        term: '',\n        filter: 'active' // active, important, done\n\n    };\n\n    createTodoItem(label) {\n        return {\n            id: this.maxId++,\n            label: label,\n            important: false,\n            done: false\n        }\n    }\n\n    onItemDelete = (id) => {\n        this.setState(({todoData}) => {\n            const idx = todoData.findIndex((el) => el.id === id);\n            const newTodoData = [\n                ...todoData.slice(0, idx),\n                ...todoData.slice(idx + 1)\n            ];\n            return {\n                todoData: newTodoData\n            }\n        })\n    };\n    onItemAdded = (text) => {\n        const newItem = this.createTodoItem(text);\n\n        this.setState(({todoData}) => {\n            const newTodoData = [\n                ...todoData,\n                newItem\n            ];\n            return {\n                todoData: newTodoData\n            }\n        })\n\n    };\n\n    toggleProperty(arr, id, propName) {\n        const idx = arr.findIndex((el) => el.id === id);\n        const oldItem = arr[idx];\n        const newItem = {...oldItem, [propName]: !oldItem[propName]};\n        return [\n            ...arr.slice(0, idx),\n            newItem,\n            ...arr.slice(idx + 1)\n        ];\n    }\n\n    onToggleImportant = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'important')\n            }\n        })\n    };\n\n    onToggleDone = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'done')\n            }\n        })\n    };\n    onSearchChange = (term) => {\n        this.setState({term});\n    };\n    onFilterChange = (filter) => {\n        this.setState({filter})\n    };\n\n    search(items, term) {\n        if (term.length === 0) {\n            return items;\n        }\n        return items.filter((item) => {\n            return item.label\n                .toLowerCase()\n                .indexOf(term.toLowerCase()) > -1;\n        })\n    }\n\n    filter(items, filter) {\n        switch (filter) {\n            case 'active':\n                return items.filter((item) => !item.done);\n            case 'important':\n                return items.filter((item) => item.important);\n            case 'done':\n                return items.filter((item) => item.done);\n            default:\n                return items;\n        }\n    }\n\n    render() {\n        const {todoData, term, filter} = this.state;\n        const visibleItems = this.filter(\n            this.search(todoData, term),\n            filter\n        );\n        const doneCount = todoData.filter(\n            (el) => el.done)\n            .length;\n        const todoCount = todoData.length - doneCount;\n        return (\n            <div className=\"container mt-3\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <AppHeader/>\n                        <FilterPanel\n                            filter={filter}\n                            onFilterChange={this.onFilterChange}\n                        />\n                        <TodoWidget\n                            toDo={todoCount}\n                            done={doneCount}/>\n                        <SearchPanel\n                            onSearchChange={this.onSearchChange}/>\n                        <ItemAddForm\n                            onItemAdded={this.onItemAdded}\n                        />\n                        <TodoList\n                            todos={visibleItems}\n                            onDeleted={this.onItemDelete}\n                            onToggleImportant={this.onToggleImportant}\n                            onToggleDone={this.onToggleDone}\n                        />\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n};\n\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\n\nimport App from \"./components/app\";\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}
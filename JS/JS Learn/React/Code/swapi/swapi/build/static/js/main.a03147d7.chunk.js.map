{"version":3,"sources":["serviceWorker.js","components/header/index.js","components/header/header.js","components/spinner/index.js","components/spinner/spinner.js","components/error-msg/index.js","components/error-msg/error-msg.js","components/container/index.js","components/container/container.js","components/container-detail-view/index.js","components/container-detail-view/container-detail-view.js","components/error-boundary/index.js","components/error-boundary/error-boudary.js","services/django-swapi-service.js","components/random-planet/random-planet.js","components/random-planet/index.js","services/swapi-service.js","components/swapi-service-context/swapi-service-context.js","components/invitation/index.js","components/invitation/invitation.js","components/item-detail/item-detail.js","components/item-detail/index.js","components/hoc-helper/with-data.js","components/hoc-helper/with-swapi-service.js","components/hoc-helper/with-child-function.js","components/hoc-helper/compose.js","components/sw-components/person-details.js","components/sw-components/planets-details.js","components/sw-components/starship-details.js","components/body-select/body-select.js","components/sw-components/item-lists.js","components/scroller/index.js","components/scroller/scrollToTop.js","components/pages/people-page.js","components/pages/planets-page.js","components/pages/starships-page.js","components/pages/welcome-page.js","components/app/index.js","components/app/app.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Header","onServiceChange","className","to","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","Spinner","ErrorMsg","role","Container","content","ContainerDetailView","contentDetail","ErrorBoundary","hasError","errorInfo","this","setState","props","children","Component","DjangoSwapiService","_apiBase","_imageBase","_transformData","items","toString","getResource","url","a","async","fetch","response","ok","Error","status","json","getAllPeople","res","map","getPerson","person","getPersonImage","getALlPlanets","getPlanet","planet","getPlanetImage","getALlStarships","getStarship","starship","getStarshipImage","RandomPlanet","loading","swapiService","onPlanetLoaded","onError","err","updatePlanet","Math","floor","random","updateInterval","interval","setInterval","hasData","errorMsg","spinner","planetDetail","Fragment","defaultProps","PlanetView","name","population","rotationPeriod","diameter","src","alt","SwapiService","results","_transformPerson","_extractId","gender","birthYear","birth_year","eyeColor","eye_color","_transformPlanet","rotation_period","_transformStarship","model","manufacturer","item","React","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","Invitation","Record","field","label","ItemDetail","image","onItemLoaded","getImageUrl","updateItem","prevProps","prevState","snapshot","itemId","getData","needToShow","itemDetail","ItemView","Children","child","cloneElement","withData","View","data","onItemListLoaded","update","withSwapiService","mapMethodsToProps","Wrapped","serviceProps","withChildFunction","fn","compose","funcs","comp","reduceRight","prevResult","func","BodySelect","onItemSelected","renderLabel","itemListContent","key","renderName","PersonList","PlanetList","StarshipList","scrollToTop","Scroll","withRouter","value","history","params","useEffect","push","WelcomePage","App","selectedItem","path","render","exact","component","PeoplePage","PlanetsPage","StarshipsPage","ReactDOM","document","getElementById","URL","process","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a03147d7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Header from \"./header\";\nexport default Header","import React from \"react\"\nimport {Link} from \"react-router-dom\"\n\nconst Header = ({onServiceChange}) => {\n    return (\n        <nav className=\"navbar navbar-expand-md navbar-dark elegant-color-dark\">\n            <Link to=\"/\" className=\"navbar-brand\" href=\"/\">Swapi</Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n                    aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"/>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n                    <Link to=\"/people/\" className=\"list-group-item list-group-item-action elegant-color\">\n                        People\n                    </Link>\n                    <Link to=\"/planets/\" className=\"list-group-item list-group-item-action elegant-color\">\n                        Planets\n                    </Link>\n                    <Link to=\"/starships/\" className=\"list-group-item list-group-item-action elegant-color\">\n                        Starships\n                    </Link>\n                    <button className=\"list-group-item list-group-item-action elegant-color-dark\"\n                            onClick={onServiceChange}>\n                        Change Service\n                    </button>\n                    <a href=\"https://vk.com/mistermihail23\" className=\"list-group-item list-group-item-action elegant-color-dark\">Developer</a>\n                </ul>\n            </div>\n        </nav>\n    )\n\n}\nexport default Header","import Spinner from \"./spinner\";\n\nexport default Spinner","import React from \"react\";\nimport \"./spinner.css\"\n\nconst Spinner = () => {\n    return (\n        <div className=\"col-12 py-2 d-flex justify-content-center\">\n            <div className=\"preloader-wrapper small active\">\n                <div className=\"spinner-layer spinner-red-only spinner-color-white\">\n                    <div className=\"circle-clipper left\">\n                        <div className=\"circle\"/>\n                    </div>\n                    <div className=\"gap-patch\">\n                        <div className=\"circle\"/>\n                    </div>\n                    <div className=\"circle-clipper right\">\n                        <div className=\"circle\"/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\nexport default Spinner;\n\n","import ErrorMsg from \"./error-msg\";\n\nexport default ErrorMsg","import React from \"react\"\n\nconst ErrorMsg = () => {\n    return (\n        <div className=\"col-12\">\n            <div className=\"alert alert-danger m-0\" role=\"alert\">\n                <p>Something has gone terribly wrong, but <b>we already sent droids to fix it!</b></p>\n                <p>(Please, try to reload this page)</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ErrorMsg","import Container from \"./container\";\n\nexport default Container;","import React from \"react\";\nimport PropTypes from \"prop-types\"\n\nconst Container = ({content}) => {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12 col-md-6\">\n                    <div className=\"jumbotron jumbotron-fluid mt-3 elegant-color-dark p-0\">\n                        {content}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\nContainer.propTypes = {\n    content: PropTypes.node\n}\nexport default Container;","import ContainerDetailView from \"./container-detail-view\";\n\nexport default ContainerDetailView;","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport Container from \"../container\";\n\nconst ContainerDetailView = ({contentDetail}) => {\n    const content = (\n        <div className=\"container\">\n            <div className=\"row py-3 text-white\">\n                {contentDetail}\n            </div>\n        </div>\n    );\n    return (\n        <Container content={content}/>\n    )\n};\n\nContainerDetailView.propTypes = {\n    contentDetail: PropTypes.node\n}\nexport default ContainerDetailView","import ErrorBoundary from \"./error-boudary\";\n\nexport default ErrorBoundary","import React, {Component} from \"react\";\nimport ErrorMsg from \"../error-msg\";\n\nexport default class ErrorBoundary extends Component {\n    state = {\n        hasError: false\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({hasError: true});\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <ErrorMsg/>\n        }\n        return this.props.children;\n    }\n}","export default class DjangoSwapiService {\n    _apiBase = 'http://localhost:8000/api/v1'\n    _imageBase = 'http://localhost:8000/media/image'\n    _transformData = ({id, ...items}) => {\n        return {\n            id: id.toString(),\n            ...items\n        }\n    }\n\n    getResource = async (url) => {\n        const response = await fetch(`${this._apiBase}${url}`)\n        if (!response.ok) {\n            throw new Error(`Could not fetch ${this._apiBase}${url}, received ${response.status}`)\n        }\n        return await response.json()\n    }\n    // People\n    getAllPeople = async () => {\n        const res = await this.getResource(`/people/`)\n        return res.map(this._transformData)\n    }\n    getPerson = async (id) => {\n        const person = await this.getResource(`/people/${id}/`)\n        return this._transformData(person)\n    }\n    getPersonImage = ({id}) => {\n        return `${this._imageBase}/people/${id}.jpg`\n    }\n    // Planets\n    getALlPlanets = async () => {\n        const res = await this.getResource(`/planets/`)\n        return res.map(this._transformData)\n    }\n    getPlanet = async (id) => {\n        const planet = await this.getResource(`/planets/${id}/`)\n        return this._transformData(planet)\n    }\n    getPlanetImage = ({id}) => {\n        return `${this._imageBase}/planets/${id}.jpg`\n    }\n    // Starships\n    getALlStarships = async () => {\n        const res = await this.getResource(`/starships/`)\n        return res.map(this._transformData)\n    }\n    getStarship = async (id) => {\n        const starship = await this.getResource(`/starships/${id}/`)\n        return this._transformData(starship)\n    }\n    getStarshipImage = ({id}) => {\n        return `${this._imageBase}/starships/${id}.jpg`\n    }\n}","import React, {Component} from \"react\"\nimport PropTypes from 'prop-types'\nimport Spinner from \"../spinner\"\nimport ErrorMsg from \"../error-msg\"\nimport ContainerDetailView from \"../container-detail-view\"\nimport ErrorBoundary from \"../error-boundary\"\nimport DjangoSwapiService from \"../../services/django-swapi-service\"\n\nexport default class RandomPlanet extends Component {\n    static defaultProps = {\n        updateInterval: 3000\n    }\n    static propTypes = {\n        updateInterval: PropTypes.number\n\n    }\n    state = {\n        planet: null,\n        loading: true\n    }\n    swapiService = new DjangoSwapiService()\n\n    componentDidMount() {\n        const {updateInterval} = this.props\n        this.updatePlanet()\n        this.interval = setInterval(this.updatePlanet, updateInterval)\n    }\n\n    onPlanetLoaded = (planet) => {\n        this.setState({\n            planet,\n            loading: false,\n        })\n    }\n    onError = (err) => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    updatePlanet = () => {\n        const id = Math.floor(Math.random() * 5) + 1\n        this.swapiService.getPlanet(id)\n            .then(this.onPlanetLoaded)\n            .catch(this.onError)\n    }\n\n\n    render() {\n        const {planet, loading, error} = this.state\n\n        const hasData = !(loading || error)\n\n        const errorMsg = error ? <ErrorMsg/> : null\n        const spinner = loading ? <Spinner/> : null\n        const planetDetail = hasData ? <PlanetView planet={planet}/> : null\n        const content = (\n            <React.Fragment>\n                <div className=\"col-12\">\n                    <h2>Random planet</h2>\n                </div>\n                {errorMsg}\n                {spinner}\n                {planetDetail}\n            </React.Fragment>\n        )\n\n        return (\n            <ErrorBoundary>\n                <ContainerDetailView contentDetail={content}/>\n            </ErrorBoundary>\n        )\n    }\n}\n\nconst PlanetView = ({planet}) => {\n    const {id, name, population, rotationPeriod, diameter} = planet\n\n    return (\n        <React.Fragment>\n            <div className=\"col-12 col-md-4 d-flex align-items-center justify-content-center\">\n                <img src={`http://localhost:8000/media/image/planets/${id}.jpg`}\n                     alt=\"\" className=\"img img-fluid rounded z-depth-1\"/>\n            </div>\n            <div className=\"col-12 col-md-8\">\n                <h2 className=\"display-5\">{name}</h2>\n            </div>\n            <div className=\"col-12 mt-3\">\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item elegant-color\">Population {population}</li>\n                    <li className=\"list-group-item elegant-color\">Rotation\n                        Period {rotationPeriod}</li>\n                    <li className=\"list-group-item elegant-color\">Diameter {diameter}</li>\n                </ul>\n            </div>\n        </React.Fragment>\n    )\n}","import RandomPlanet from \"./random-planet\";\nexport default RandomPlanet","export default class SwapiService {\n    _apiBase = 'https://swapi.co/api'\n    _imageBase = 'https://starwars-visualguide.com/assets/img'\n\n    _extractId(item) {\n        const idRegExp = /\\/([0-9]*)\\/$/\n        return item.url.match(idRegExp)[1]\n    }\n\n    getResource = async (url) => {\n        const response = await fetch(`${this._apiBase}${url}`)\n        if (!response.ok) {\n            throw new Error(`Could not fetch ${this._apiBase}${url}, received ${response.status}`)\n        }\n        return await response.json()\n    }\n    // People\n    getAllPeople = async () => {\n        const res = await this.getResource(`/people/`)\n        return res.results.map(this._transformPerson)\n    }\n    getPerson = async (id) => {\n        const person = await this.getResource(`/people/${id}`)\n        return this._transformPerson(person)\n    }\n    getPersonImage = ({\n                          id\n                      }) => {\n        return `${this._imageBase}/characters/${id}.jpg`\n    }\n    _transformPerson = (person) => {\n        return {\n            id: this._extractId(person),\n            name: person.name,\n            gender: person.gender,\n            birthYear: person.birth_year,\n            eyeColor: person.eye_color\n        }\n    }\n    // Planets\n    getALlPlanets = async () => {\n        const res = await this.getResource(`/planets/`)\n        return res.results.map(this._transformPlanet)\n    }\n    getPlanet = async (id) => {\n        const planet = await this.getResource(`/planets/${id}`)\n        return this._transformPlanet(planet)\n    }\n    getPlanetImage = ({\n                          id\n                      }) => {\n        return `${this._imageBase}/planes/${id}.jpg`\n    }\n    _transformPlanet = (planet) => {\n        return {\n            id: this._extractId(planet),\n            name: planet.name,\n            population: planet.population,\n            rotationPeriod: planet.rotation_period,\n            diameter: planet.diameter\n        }\n    }\n    // Starships\n    getALlStarships = async () => {\n        const res = await this.getResource(`/starships/`)\n        return res.results.map(this._transformStarship)\n    }\n    getStarship = async (id) => {\n        const starship = await this.getResource(`/starships/${id}`)\n        return this._transformStarship(starship)\n    }\n    getStarshipImage = ({\n                            id\n                        }) => {\n        return `${this._imageBase}/starships/${id}.jpg`\n    }\n    _transformStarship = (starship) => {\n        return {\n            id: this._extractId(starship),\n            name: starship.name,\n            model: starship.model,\n            manufacturer: starship.manufacturer\n        }\n    }\n}","import React from \"react\"\n\nconst {\n    Provider: SwapiServiceProvider,\n    Consumer: SwapiServiceConsumer\n} = React.createContext()\n\nexport {\n    SwapiServiceProvider,\n    SwapiServiceConsumer\n}","import Invitation from \"./invitation\"\n\nexport default Invitation","import React from \"react\"\n\nconst Invitation = () => {\n    return (\n        <div className=\"col-8\">\n            <h4 className=\"display-5\">Select an item from a list</h4>\n        </div>\n    )\n}\nexport default Invitation","import React, {Component} from \"react\"\nimport ErrorMsg from \"../error-msg\"\nimport Spinner from \"../spinner\"\nimport ContainerDetailView from \"../container-detail-view\"\nimport Invitation from \"../invitation\"\n\nconst Record = ({item, field, label}) => {\n    return (\n        <li className=\"list-group-item elegant-color\">{label} {item[field]}</li>\n    )\n}\nexport {\n    Record\n}\n\nexport default class ItemDetail extends Component {\n    state = {\n        item: null,\n        image: null,\n        loading: true,\n    }\n\n    componentDidMount() {\n        this.updateItem()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.itemId !== prevProps.itemId ||\n            this.props.getData !== prevProps.getData ||\n            this.props.getImageUrl !== prevProps.getImageUrl) {\n            this.setState({loading: true})\n            this.updateItem()\n        }\n    }\n\n    onItemLoaded = (item) => {\n        this.setState({\n            item,\n            image: this.props.getImageUrl(item),\n            loading: false\n        })\n    }\n\n    onError = (err) => {\n        console.log('💩💩💩')\n        console.log(err)\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    updateItem() {\n        const {itemId, getData} = this.props\n        if (!itemId) {\n            this.setState({item: null, image: null, needToShow: false})\n            return\n        }\n        this.setState({item: true, image: true})\n        getData(itemId)\n            .then(this.onItemLoaded)\n            .catch(this.onError)\n    };\n\n\n    render() {\n        const {item, image, loading, error} = this.state\n        if (!item) {\n            return <ContainerDetailView contentDetail={<Invitation/>}/>\n        }\n        const hasData = !(error || loading)\n        const errorMsg = error ? <ErrorMsg/> : null\n        const spinner = loading ? <Spinner/> : null\n\n        const itemDetail = hasData ?\n            <ItemView item={item} image={image} children={this.props.children}/> : null\n\n        const content = (\n            <React.Fragment>\n                {errorMsg}\n                {spinner}\n                {itemDetail}\n            </React.Fragment>\n        )\n\n        return (\n            <ContainerDetailView contentDetail={content}/>\n        )\n    }\n}\n\nconst ItemView = ({item, image, children}) => {\n    return (\n        <React.Fragment>\n            <div className=\"col-4 d-flex align-items-center justify-content-center\">\n                <img src={image}\n                     alt=\"\" className=\"img img-fluid rounded z-depth-1\"/>\n            </div>\n            <div className=\"col-8\">\n                <h2 className=\"display-5\">{item.name}</h2>\n            </div>\n            <div className=\"col-12 mt-3\">\n                <ul className=\"list-group list-group-flush\">\n                    {\n                        React.Children.map(children, (child) => {\n                            return React.cloneElement(child, {item})\n                        })\n                    }\n                </ul>\n            </div>\n        </React.Fragment>\n    )\n}\n","import ItemDetail, {Record} from \"./item-detail\"\n\nexport default ItemDetail\nexport {Record}","import React, {Component} from \"react\"\n\nimport Spinner from \"../spinner\"\nimport ErrorMsg from \"../error-msg\"\nimport ContainerDetailView from \"../container-detail-view\"\n\nconst withData = (View) => {\n    return class extends Component {\n        state = {\n            data: null,\n            loading: true,\n            error: false\n        }\n        onItemListLoaded = (data) => {\n            this.setState({\n                data,\n                loading: false,\n            })\n        }\n        onError = (err) => {\n            this.setState({\n                error: true,\n                loading: false\n            })\n        }\n\n        componentDidMount() {\n            this.update()\n        }\n\n        componentDidUpdate(prevProps) {\n            if (this.props.getData !== prevProps.getData) {\n                this.update()\n            }\n        }\n\n        update() {\n            this.props.getData()\n                .then(this.onItemListLoaded)\n                .catch(this.onError)\n        }\n\n        render() {\n            const {data, error, loading} = this.state\n\n            if (loading) {\n                return <ContainerDetailView contentDetail={<Spinner/>}/>\n            }\n            if (error) {\n                return <ContainerDetailView contentDetail={<ErrorMsg/>}/>\n            }\n            return <View {...this.props} data={data}/>\n        }\n    }\n}\n\nexport default withData","import React from \"react\"\nimport {SwapiServiceConsumer} from \"../swapi-service-context\"\n\nconst withSwapiService = (mapMethodsToProps) => (Wrapped) => {\n    return (props) => {\n        return (\n            <SwapiServiceConsumer>\n                {\n                    (swapiService) => {\n                        const serviceProps = mapMethodsToProps(swapiService)\n                        return (\n                            <Wrapped {...props} {...serviceProps}/>\n                        )\n                    }\n                }\n            </SwapiServiceConsumer>\n        )\n    }\n}\nexport default withSwapiService","import React from \"react\"\n\nconst withChildFunction = (fn) => (Wrapped) => {\n    return (props) => {\n        return (\n            <Wrapped {...props}>\n                {fn}\n            </Wrapped>\n        )\n    }\n}\nexport default withChildFunction","const compose = (...funcs) => (comp) => {\n    return funcs.reduceRight((prevResult, func) => func(prevResult), comp)\n}\nexport default compose","import ItemDetail, {Record} from \"../item-detail\"\nimport React from \"react\"\nimport {withSwapiService} from \"../hoc-helper\"\n\nconst PersonDetails = (props) => {\n    return (\n        <ItemDetail {...props}>\n            <Record field=\"gender\" label=\"Gender\"/>\n            <Record field=\"eyeColor\" label=\"Eye color\"/>\n            <Record field=\"birthYear\" label=\"Birth year\"/>\n        </ItemDetail>\n    )\n}\nconst mapMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getPerson,\n        getImageUrl: swapiService.getPersonImage\n    }\n}\nexport default withSwapiService(mapMethodsToProps)(PersonDetails)","import ItemDetail, {Record} from \"../item-detail\"\nimport React from \"react\"\nimport {withSwapiService} from \"../hoc-helper\"\n\nconst PlanetsDetails = (props) => {\n    return (\n        <ItemDetail {...props}>\n            <Record field=\"name\" label=\"Name\"/>\n            <Record field=\"population\" label=\"Population\"/>\n            <Record field=\"rotationPeriod\" label=\"Rotation period\"/>\n            <Record field=\"diameter\" label=\"Diameter\"/>\n        </ItemDetail>\n    )\n}\nconst mapMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getPlanet,\n        getImageUrl: swapiService.getPlanetImage\n    }\n}\nexport default withSwapiService(mapMethodsToProps)(PlanetsDetails)","import ItemDetail, {Record} from \"../item-detail\"\nimport React from \"react\"\nimport {withSwapiService} from \"../hoc-helper\"\n\nconst StarshipDetails = (props) => {\n    return (\n        <ItemDetail {...props}>\n            <Record field=\"name\" label=\"Name\"/>\n            <Record field=\"model\" label=\"Model\"/>\n            <Record field=\"manufacturer\" label=\"Manufacturer\"/>\n        </ItemDetail>\n    )\n}\nconst mapMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getStarship,\n        getImageUrl: swapiService.getStarshipImage\n    }\n}\nexport default withSwapiService(mapMethodsToProps)(StarshipDetails)","import React from \"react\"\nimport PropTypes from 'prop-types'\nimport Container from \"../container\"\n\nconst BodySelect = (props) => {\n    const {data, onItemSelected, children: renderLabel} = props\n    const itemListContent = data ? data.map((item) => {\n        const {id} = item\n\n        const label = renderLabel(item)\n\n        return (\n            <button type=\"button\"\n                    className=\"list-group-item list-group-item-action elegant-color\"\n                    key={id}\n                    onClick={() => {\n\n                        onItemSelected(id)\n                    }}>\n                {label}\n            </button>\n        )\n    }) : null\n    return (\n        <Container content={itemListContent}/>\n    )\n}\n\nBodySelect.defaultProps = {\n    onItemSelected: () => {\n    }\n}\n\nBodySelect.propTypes = {\n    onItemSelected: PropTypes.func,\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    children: PropTypes.func.isRequired\n}\n\nexport default BodySelect","import React from \"react\"\nimport BodySelect from \"../body-select/body-select\"\nimport {withData, withSwapiService, withChildFunction, compose} from \"../hoc-helper\"\n\nconst renderName = ({name}) => <span>{name}</span>\nconst renderModelAndName = ({model, name}) => <span>{name} [{model}]</span>\n\nconst mapPersonMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getAllPeople\n    }\n}\nconst mapPlanetMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getALlPlanets\n    }\n}\nconst mapStarshipMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getALlStarships\n    }\n}\n\nconst PersonList =\n    compose(\n        withSwapiService(mapPersonMethodsToProps),\n        withData,\n        withChildFunction(renderName)\n    )(BodySelect)\nconst PlanetList =\n    compose(\n        withSwapiService(mapPlanetMethodsToProps),\n        withData,\n        withChildFunction(renderName),\n    )(BodySelect)\n\nconst StarshipList =\n    compose(\n        withSwapiService(mapStarshipMethodsToProps),\n        withData,\n        withChildFunction(renderModelAndName)\n    )(BodySelect)\n\nexport {\n    PersonList,\n    PlanetList,\n    StarshipList,\n}","import scrollToTop from \"./scrollToTop\"\n\nexport default scrollToTop","import {animateScroll as Scroll} from \"react-scroll\";\n\nconst scrollToTop = () => {\n    Scroll.scrollToTop();\n};\nexport default scrollToTop;","import React, {useEffect} from \"react\"\nimport {PersonDetails, PersonList} from \"../sw-components\"\nimport {withRouter} from \"react-router-dom\"\nimport scrollToTop from \"../scroller\"\n\nconst useScroll = (value) => {\n    useEffect(() => {\n        scrollToTop()\n    }, [value])\n}\nconst PeoplePage = ({history, match}) => {\n    const {id} = match.params\n    useScroll(id)\n    return (\n        <React.Fragment>\n            <PersonDetails itemId={id}/>\n            <PersonList\n                onItemSelected={(id) => history.push(id)}/>\n        </React.Fragment>\n    )\n}\nexport default withRouter(PeoplePage)","import React, {useEffect} from \"react\"\nimport {PlanetDetails, PlanetList} from \"../sw-components\"\nimport {withRouter} from \"react-router-dom\"\nimport scrollToTop from \"../scroller\"\nconst useScroll = (value) => {\n    useEffect(() => {\n        scrollToTop()\n    }, [value])\n}\nconst PlanetsPage = ({history, match}) => {\n    const {id} = match.params\n    useScroll(id)\n    return (\n        <React.Fragment>\n            <PlanetDetails itemId={id}/>\n            <PlanetList\n                onItemSelected={(id) => history.push(id)}/>\n        </React.Fragment>\n    )\n}\nexport default withRouter(PlanetsPage)","import React, {useEffect} from \"react\"\nimport {StarshipDetails, StarshipList} from \"../sw-components\"\nimport scrollToTop from \"../scroller\"\nimport {withRouter} from \"react-router-dom\"\n\nconst useScroll = (value) => {\n    useEffect(() => {\n        scrollToTop()\n    }, [value])\n}\nconst StarshipsPage = ({history, match}) => {\n    const {id} = match.params\n    useScroll(id)\n    return (\n        <React.Fragment>\n            <StarshipDetails itemId={id}/>\n            <StarshipList\n                onItemSelected={(id) => history.push(id)}/>\n        </React.Fragment>\n    )\n}\nexport default withRouter(StarshipsPage)\n","import React from \"react\"\nimport ContainerDetailView from \"../container-detail-view\"\n\n\nconst WelcomePage = () => {\n    const content = (\n        <div className=\"col\">\n            <h3>Welcome to SWAPI!</h3>\n            <p>Select people, planets or&nbsp;starships category!</p>\n            <img className=\"img\" src=\"http://127.0.0.1:8000/media/image/welcome/welcome-page.jpg\"></img>\n        </div>\n    )\n    return (\n        <ContainerDetailView contentDetail={content}/>\n    )\n}\nexport default WelcomePage\n","import App from \"./app\";\n\nexport default App","import React, {Component} from \"react\"\n\nimport Header from \"../header\"\nimport RandomPlanet from \"../random-planet\"\nimport SwapiService from \"../../services/swapi-service\"\nimport DjangoSwapiService from \"../../services/django-swapi-service.js\"\nimport ErrorBoundary from \"../error-boundary\"\n\nimport {SwapiServiceProvider} from \"../swapi-service-context\"\nimport {\n    PeoplePage,\n    PlanetsPage,\n    StarshipsPage,\n    WelcomePage\n} from \"../pages\"\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\n\nexport default class App extends Component {\n\n    state = {\n        selectedItem: Math.floor(Math.random() * 10) + 1,\n        swapiService: new DjangoSwapiService(),\n    }\n    onServiceChange = () => {\n        this.setState(({swapiService}) => {\n            const Service = swapiService instanceof SwapiService ? DjangoSwapiService : SwapiService\n            return {\n                swapiService: new Service()\n            }\n        })\n    }\n\n    render() {\n        return (\n            <ErrorBoundary>\n                <SwapiServiceProvider value={this.state.swapiService}>\n                    <Router>\n                        <Header onServiceChange={this.onServiceChange}/>\n\n                        <Route path=\"/\" render={() => <WelcomePage/>} exact/>\n\n                        <Route path=\"/people/:id?\" component={PeoplePage}/>\n                        <Route path=\"/planets/:id?\" component={PlanetsPage}/>\n                        <Route path=\"/starships/:id?\" component={StarshipsPage}/>\n\n                        <RandomPlanet updateInterval={10000}/>\n                    </Router>\n                </SwapiServiceProvider>\n            </ErrorBoundary>\n        )\n    }\n}\n","import ReactDOM from \"react-dom\"\nimport React from \"react\"\nimport * as serviceWorker from './serviceWorker'\nimport App from \"./components/app\"\n\nReactDOM.render(<App/>, document.getElementById('root'))\nserviceWorker.register()\n"],"sourceRoot":""}
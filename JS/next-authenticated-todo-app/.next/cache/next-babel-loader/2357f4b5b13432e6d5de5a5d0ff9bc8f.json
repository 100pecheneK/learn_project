{"ast":null,"code":"import Database from './Database';\n\nconst Airtable = require('airtable');\n\nAirtable.configure({\n  apiKey: process.env.AIRTABLE_API_KEY\n});\nconst base = Airtable.base(process.env.AIRTABLE_BASE_ID);\nconst table = base(process.env.AIRTABLE_TABLE_NAME);\n\nconst getMinifiedRecord = record => {\n  var _record$fields;\n\n  if (!((_record$fields = record.fields) === null || _record$fields === void 0 ? void 0 : _record$fields.completed)) {\n    record.fields.completed = false;\n  }\n\n  return {\n    id: record.id,\n    fields: record.fields\n  };\n};\n\nconst getMinifiedRecords = records => {\n  return records.map(getMinifiedRecord);\n};\n\nclass AirtableDatabase extends Database {\n  async getAll({\n    filter\n  }) {\n    const data = await table.select({\n      filterByFormula: `${filter.field} = '${filter.value}'`\n    }).firstPage();\n    return getMinifiedRecords(data);\n  }\n\n  async updateOne() {\n    throw new Error('Method not implemented');\n  }\n\n  async deleteOne() {\n    throw new Error('Method not implemented');\n  }\n\n  async create() {\n    throw new Error('Method not implemented');\n  }\n\n}\n\nconst airtableDatabase = new AirtableDatabase();\nexport { airtableDatabase, table, getMinifiedRecords, getMinifiedRecord };","map":{"version":3,"sources":["/Users/misha/Documents/learn_project/JS/next-authenticated-todo-app/pages/api/utils/Airtable.js"],"names":["Database","Airtable","require","configure","apiKey","process","env","AIRTABLE_API_KEY","base","AIRTABLE_BASE_ID","table","AIRTABLE_TABLE_NAME","getMinifiedRecord","record","fields","completed","id","getMinifiedRecords","records","map","AirtableDatabase","getAll","filter","data","select","filterByFormula","field","value","firstPage","updateOne","Error","deleteOne","create","airtableDatabase"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACAD,QAAQ,CAACE,SAAT,CAAmB;AACjBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADH,CAAnB;AAGA,MAAMC,IAAI,GAAGP,QAAQ,CAACO,IAAT,CAAcH,OAAO,CAACC,GAAR,CAAYG,gBAA1B,CAAb;AAEA,MAAMC,KAAK,GAAGF,IAAI,CAACH,OAAO,CAACC,GAAR,CAAYK,mBAAb,CAAlB;;AAEA,MAAMC,iBAAiB,GAAGC,MAAM,IAAI;AAAA;;AAClC,MAAI,oBAACA,MAAM,CAACC,MAAR,mDAAC,eAAeC,SAAhB,CAAJ,EAA+B;AAC7BF,IAAAA,MAAM,CAACC,MAAP,CAAcC,SAAd,GAA0B,KAA1B;AACD;;AACD,SAAO;AACLC,IAAAA,EAAE,EAAEH,MAAM,CAACG,EADN;AAELF,IAAAA,MAAM,EAAED,MAAM,CAACC;AAFV,GAAP;AAID,CARD;;AAUA,MAAMG,kBAAkB,GAAGC,OAAO,IAAI;AACpC,SAAOA,OAAO,CAACC,GAAR,CAAYP,iBAAZ,CAAP;AACD,CAFD;;AAIA,MAAMQ,gBAAN,SAA+BpB,QAA/B,CAAwC;AACtC,QAAMqB,MAAN,CAAa;AAAEC,IAAAA;AAAF,GAAb,EAAyB;AACvB,UAAMC,IAAI,GAAG,MAAMb,KAAK,CACrBc,MADgB,CACT;AACNC,MAAAA,eAAe,EAAG,GAAEH,MAAM,CAACI,KAAM,OAAMJ,MAAM,CAACK,KAAM;AAD9C,KADS,EAIhBC,SAJgB,EAAnB;AAMA,WAAOX,kBAAkB,CAACM,IAAD,CAAzB;AACD;;AACD,QAAMM,SAAN,GAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AACD;;AACD,QAAMC,SAAN,GAAkB;AAChB,UAAM,IAAID,KAAJ,CAAU,wBAAV,CAAN;AACD;;AACD,QAAME,MAAN,GAAe;AACb,UAAM,IAAIF,KAAJ,CAAU,wBAAV,CAAN;AACD;;AAlBqC;;AAoBxC,MAAMG,gBAAgB,GAAG,IAAIb,gBAAJ,EAAzB;AAEA,SAAQa,gBAAR,EAA0BvB,KAA1B,EAAiCO,kBAAjC,EAAqDL,iBAArD","sourcesContent":["import Database from './Database'\n\nconst Airtable = require('airtable')\nAirtable.configure({\n  apiKey: process.env.AIRTABLE_API_KEY,\n})\nconst base = Airtable.base(process.env.AIRTABLE_BASE_ID)\n\nconst table = base(process.env.AIRTABLE_TABLE_NAME)\n\nconst getMinifiedRecord = record => {\n  if (!record.fields?.completed) {\n    record.fields.completed = false\n  }\n  return {\n    id: record.id,\n    fields: record.fields,\n  }\n}\n\nconst getMinifiedRecords = records => {\n  return records.map(getMinifiedRecord)\n}\n\nclass AirtableDatabase extends Database {\n  async getAll({ filter }) {\n    const data = await table\n      .select({\n        filterByFormula: `${filter.field} = '${filter.value}'`,\n      })\n      .firstPage()\n    \n    return getMinifiedRecords(data)\n  }\n  async updateOne() {\n    throw new Error('Method not implemented')\n  }\n  async deleteOne() {\n    throw new Error('Method not implemented')\n  }\n  async create() {\n    throw new Error('Method not implemented')\n  }\n}\nconst airtableDatabase = new AirtableDatabase()\n\nexport {airtableDatabase, table, getMinifiedRecords, getMinifiedRecord }\n"]},"metadata":{},"sourceType":"module"}
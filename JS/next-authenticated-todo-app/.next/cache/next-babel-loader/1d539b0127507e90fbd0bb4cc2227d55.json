{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/misha/Desktop/nextblog/todo/components/Todo.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useState } from 'react';\nimport { TodosContext } from '../contexts/TodosContext';\nimport Loader from './Loader';\nexport default function Todo({\n  todo: {\n    fields,\n    id\n  }\n}) {\n  const {\n    updateTodo,\n    deleteTodo\n  } = useContext(TodosContext);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const updateTodoHandler = updateTodo => {\n    setLoading(true);\n    Promise.all([updateTodo(updatedTodo)]).then(() => {\n      setLoading(false);\n    });\n  };\n\n  const handleToggleCompleted = () => {\n    const updatedFields = _objectSpread(_objectSpread({}, fields), {}, {\n      completed: !fields.completed\n    });\n\n    const updatedTodo = {\n      id,\n      fields: updatedFields\n    };\n    updateTodoHandler(updatedTodo);\n  };\n\n  const deleteTodoHandler = async id => {\n    setLoading(true);\n    await deleteTodo(id);\n    setLoading(false);\n  };\n\n  const onDelete = async e => {};\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `bg-white flex items-center shadow-lg rounded-lg my-2 py-2 px-4 ${loading ? 'opacity-50' : ''}`,\n    children: [loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      name: \"completed\",\n      id: \"completed\",\n      checked: fields.completed,\n      className: \"mr-2 form-checkbox h-5 w-5\",\n      onChange: handleToggleCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `flex-1 text-gray-800 ${fields.completed ? 'line-through' : ''}`,\n      children: fields.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: `text-sm bg-red-500 hover:bg-red-600 text-white py-1 px-2 rounded ${loading ? 'cursor-not-allowed' : ''}`,\n      onClick: onDelete,\n      disabled: loading,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/misha/Desktop/nextblog/todo/components/Todo.jsx"],"names":["React","useContext","useState","TodosContext","Loader","Todo","todo","fields","id","updateTodo","deleteTodo","loading","setLoading","updateTodoHandler","Promise","all","updatedTodo","then","handleToggleCompleted","updatedFields","completed","deleteTodoHandler","onDelete","e","description"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV;AAAR,CAAd,EAAwC;AACrD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA6BT,UAAU,CAACE,YAAD,CAA7C;AACA,QAAM;AAAA,OAACQ,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMW,iBAAiB,GAAGJ,UAAU,IAAI;AACtCG,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACN,UAAU,CAACO,WAAD,CAAX,CAAZ,EAAuCC,IAAvC,CAA4C,MAAM;AAChDL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFD;AAGD,GALD;;AAOA,QAAMM,qBAAqB,GAAG,MAAM;AAClC,UAAMC,aAAa,mCACdZ,MADc;AAEjBa,MAAAA,SAAS,EAAE,CAACb,MAAM,CAACa;AAFF,MAAnB;;AAIA,UAAMJ,WAAW,GAAG;AAClBR,MAAAA,EADkB;AAElBD,MAAAA,MAAM,EAAEY;AAFU,KAApB;AAIAN,IAAAA,iBAAiB,CAACG,WAAD,CAAjB;AACD,GAVD;;AAWA,QAAMK,iBAAiB,GAAG,MAAMb,EAAN,IAAY;AACpCI,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMF,UAAU,CAACF,EAAD,CAAhB;AACAI,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAJD;;AAKA,QAAMU,QAAQ,GAAG,MAAMC,CAAN,IAAW,CAAE,CAA9B;;AAEA,sBACE;AACE,IAAA,SAAS,EAAG,kEACVZ,OAAO,GAAG,YAAH,GAAkB,EAC1B,EAHH;AAAA,eAKGA,OAAO,gBACN,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,WAFP;AAGE,MAAA,EAAE,EAAC,WAHL;AAIE,MAAA,OAAO,EAAEJ,MAAM,CAACa,SAJlB;AAKE,MAAA,SAAS,EAAC,4BALZ;AAME,MAAA,QAAQ,EAAEF;AANZ;AAAA;AAAA;AAAA;AAAA,YARJ,eAiBE;AACE,MAAA,SAAS,EAAG,wBACVX,MAAM,CAACa,SAAP,GAAmB,cAAnB,GAAoC,EACrC,EAHH;AAAA,gBAKGb,MAAM,CAACiB;AALV;AAAA;AAAA;AAAA;AAAA,YAjBF,eAwBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAG,oEACVb,OAAO,GAAG,oBAAH,GAA0B,EAClC,EAJH;AAKE,MAAA,OAAO,EAAEW,QALX;AAME,MAAA,QAAQ,EAAEX,OANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD","sourcesContent":["import React, { useContext, useState } from 'react'\nimport { TodosContext } from '../contexts/TodosContext'\nimport Loader from './Loader'\n\nexport default function Todo({ todo: { fields, id } }) {\n  const { updateTodo, deleteTodo } = useContext(TodosContext)\n  const [loading, setLoading] = useState(false)\n\n  const updateTodoHandler = updateTodo => {\n    setLoading(true)\n    Promise.all([updateTodo(updatedTodo)]).then(() => {\n      setLoading(false)\n    })\n  }\n\n  const handleToggleCompleted = () => {\n    const updatedFields = {\n      ...fields,\n      completed: !fields.completed,\n    }\n    const updatedTodo = {\n      id,\n      fields: updatedFields,\n    }\n    updateTodoHandler(updatedTodo)\n  }\n  const deleteTodoHandler = async id => {\n    setLoading(true)\n    await deleteTodo(id)\n    setLoading(false)\n  }\n  const onDelete = async e => {}\n\n  return (\n    <li\n      className={`bg-white flex items-center shadow-lg rounded-lg my-2 py-2 px-4 ${\n        loading ? 'opacity-50' : ''\n      }`}\n    >\n      {loading ? (\n        <Loader />\n      ) : (\n        <input\n          type='checkbox'\n          name='completed'\n          id='completed'\n          checked={fields.completed}\n          className='mr-2 form-checkbox h-5 w-5'\n          onChange={handleToggleCompleted}\n        />\n      )}\n      <p\n        className={`flex-1 text-gray-800 ${\n          fields.completed ? 'line-through' : ''\n        }`}\n      >\n        {fields.description}\n      </p>\n      <button\n        type='button'\n        className={`text-sm bg-red-500 hover:bg-red-600 text-white py-1 px-2 rounded ${\n          loading ? 'cursor-not-allowed' : ''\n        }`}\n        onClick={onDelete}\n        disabled={loading}\n      >\n        Delete\n      </button>\n    </li>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
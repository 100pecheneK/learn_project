{"ast":null,"code":"const Airtable = require('airtable');\n\nAirtable.configure({\n  apiKey: process.env.AIRTABLE_API_KEY\n});\nconst base = Airtable.base(process.env.AIRTABLE_BASE_ID);\nconst table = base(process.env.AIRTABLE_TABLE_NAME);\n\nconst getMinifiedRecord = record => {\n  var _record$fields;\n\n  if (!((_record$fields = record.fields) === null || _record$fields === void 0 ? void 0 : _record$fields.completed)) {\n    record.fields.completed = false;\n  }\n\n  return {\n    id: record.id,\n    fields: record.fields\n  };\n};\n\nconst getMinifiedRecords = records => {\n  return records.map(getMinifiedRecord);\n};\n\nexport { table, getMinifiedRecords, getMinifiedRecord };","map":{"version":3,"sources":["/Users/misha/Desktop/nextblog/todo/pages/api/utils/Airtable.js"],"names":["Airtable","require","configure","apiKey","process","env","AIRTABLE_API_KEY","base","AIRTABLE_BASE_ID","table","AIRTABLE_TABLE_NAME","getMinifiedRecord","record","fields","completed","id","getMinifiedRecords","records","map"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACAD,QAAQ,CAACE,SAAT,CAAmB;AACjBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADH,CAAnB;AAGA,MAAMC,IAAI,GAAGP,QAAQ,CAACO,IAAT,CAAcH,OAAO,CAACC,GAAR,CAAYG,gBAA1B,CAAb;AAEA,MAAMC,KAAK,GAAGF,IAAI,CAACH,OAAO,CAACC,GAAR,CAAYK,mBAAb,CAAlB;;AAEA,MAAMC,iBAAiB,GAAGC,MAAM,IAAI;AAAA;;AAClC,MAAI,oBAACA,MAAM,CAACC,MAAR,mDAAC,eAAeC,SAAhB,CAAJ,EAA+B;AAC7BF,IAAAA,MAAM,CAACC,MAAP,CAAcC,SAAd,GAA0B,KAA1B;AACD;;AACD,SAAO;AACLC,IAAAA,EAAE,EAAEH,MAAM,CAACG,EADN;AAELF,IAAAA,MAAM,EAAED,MAAM,CAACC;AAFV,GAAP;AAID,CARD;;AAUA,MAAMG,kBAAkB,GAAGC,OAAO,IAAI;AACpC,SAAOA,OAAO,CAACC,GAAR,CAAYP,iBAAZ,CAAP;AACD,CAFD;;AAIA,SAASF,KAAT,EAAgBO,kBAAhB,EAAoCL,iBAApC","sourcesContent":["const Airtable = require('airtable')\nAirtable.configure({\n  apiKey: process.env.AIRTABLE_API_KEY,\n})\nconst base = Airtable.base(process.env.AIRTABLE_BASE_ID)\n\nconst table = base(process.env.AIRTABLE_TABLE_NAME)\n\nconst getMinifiedRecord = record => {\n  if (!record.fields?.completed) {\n    record.fields.completed = false\n  }\n  return {\n    id: record.id,\n    fields: record.fields,\n  }\n}\n\nconst getMinifiedRecords = records => {\n  return records.map(getMinifiedRecord)\n}\n\nexport { table, getMinifiedRecords, getMinifiedRecord }\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { table } from './utils/Airtable';\nimport auth0 from './utils/auth0';\nexport default auth0.requireAuthentication(async (req, res) => {\n  const {\n    description\n  } = req.body;\n  const {\n    user\n  } = auth0.getSession(req);\n\n  try {\n    const createdRecords = await table.create([{\n      fields: {\n        description // userid: user.sub,\n\n      }\n    }]);\n    const createdRecord = {\n      id: createdRecords[0].id,\n      fields: createdRecords[0].fields\n    };\n    return res.json(createdRecord);\n  } catch (e) {\n    return res.status(500).json({\n      mgs: 'Somethig went wrong'\n    });\n  }\n});","map":{"version":3,"sources":["/Users/misha/Desktop/nextblog/todo/pages/api/createTodo.js"],"names":["table","auth0","requireAuthentication","req","res","description","body","user","getSession","createdRecords","create","fields","createdRecord","id","json","e","status","mgs"],"mappings":"AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,eAAeA,KAAK,CAACC,qBAAN,CAA4B,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC7D,QAAM;AAAEC,IAAAA;AAAF,MAAkBF,GAAG,CAACG,IAA5B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWN,KAAK,CAACO,UAAN,CAAiBL,GAAjB,CAAjB;;AACA,MAAI;AACF,UAAMM,cAAc,GAAG,MAAMT,KAAK,CAACU,MAAN,CAAa,CACxC;AACEC,MAAAA,MAAM,EAAE;AACNN,QAAAA,WADM,CAEN;;AAFM;AADV,KADwC,CAAb,CAA7B;AAQA,UAAMO,aAAa,GAAG;AACpBC,MAAAA,EAAE,EAAEJ,cAAc,CAAC,CAAD,CAAd,CAAkBI,EADF;AAEpBF,MAAAA,MAAM,EAAEF,cAAc,CAAC,CAAD,CAAd,CAAkBE;AAFN,KAAtB;AAIA,WAAOP,GAAG,CAACU,IAAJ,CAASF,aAAT,CAAP;AACD,GAdD,CAcE,OAAOG,CAAP,EAAU;AACV,WAAOX,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AAAEG,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AACD;AACF,CApBc,CAAf","sourcesContent":["import { table } from './utils/Airtable'\nimport auth0 from './utils/auth0'\n\nexport default auth0.requireAuthentication(async (req, res) => {\n  const { description } = req.body\n  const { user } = auth0.getSession(req)\n  try {\n    const createdRecords = await table.create([\n      {\n        fields: {\n          description,\n          // userid: user.sub,\n        },\n      },\n    ])\n    const createdRecord = {\n      id: createdRecords[0].id,\n      fields: createdRecords[0].fields,\n    }\n    return res.json(createdRecord)\n  } catch (e) {\n    return res.status(500).json({ mgs: 'Somethig went wrong' })\n  }\n})\n"]},"metadata":{},"sourceType":"module"}
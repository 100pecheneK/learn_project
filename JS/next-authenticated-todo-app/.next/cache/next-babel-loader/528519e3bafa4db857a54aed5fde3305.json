{"ast":null,"code":"import { airtableDatabase, table, getMinifiedRecords } from './utils/Airtable';\nimport auth0 from './utils/auth0';\nexport default auth0.requireAuthentication(async (req, res) => {\n  const {\n    user\n  } = await auth0.getSession(req);\n\n  try {\n    let records = await tairtableDatabase.getAll({\n      field: 'userId',\n      value: user.sub\n    }); // records = records.sort((a, b) => a.fields.date > b.fields.date)\n\n    const minifiedRecords = getMinifiedRecords(records);\n    return res.json(minifiedRecords);\n  } catch (e) {\n    console.log(e);\n    return res.status(500).json({\n      mgs: 'Somethig went wrong'\n    });\n  }\n});","map":{"version":3,"sources":["/Users/misha/Documents/learn_project/JS/next-authenticated-todo-app/pages/api/getTodos.js"],"names":["airtableDatabase","table","getMinifiedRecords","auth0","requireAuthentication","req","res","user","getSession","records","tairtableDatabase","getAll","field","value","sub","minifiedRecords","json","e","console","log","status","mgs"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,KAA3B,EAAkCC,kBAAlC,QAA4D,kBAA5D;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,eAAeA,KAAK,CAACC,qBAAN,CAA4B,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC7D,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMJ,KAAK,CAACK,UAAN,CAAiBH,GAAjB,CAAvB;;AAEA,MAAI;AACF,QAAII,OAAO,GAAG,MAAMC,iBAAiB,CAACC,MAAlB,CAAyB;AAC3CC,MAAAA,KAAK,EAAE,QADoC;AAE3CC,MAAAA,KAAK,EAAEN,IAAI,CAACO;AAF+B,KAAzB,CAApB,CADE,CAKF;;AACA,UAAMC,eAAe,GAAGb,kBAAkB,CAACO,OAAD,CAA1C;AACA,WAAOH,GAAG,CAACU,IAAJ,CAASD,eAAT,CAAP;AACD,GARD,CAQE,OAAOE,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAOX,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB;AAAEK,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AACD;AACF,CAfc,CAAf","sourcesContent":["import { airtableDatabase, table, getMinifiedRecords } from './utils/Airtable'\nimport auth0 from './utils/auth0'\n\nexport default auth0.requireAuthentication(async (req, res) => {\n  const { user } = await auth0.getSession(req)\n\n  try {\n    let records = await tairtableDatabase.getAll({\n      field: 'userId',\n      value: user.sub,\n    })\n    // records = records.sort((a, b) => a.fields.date > b.fields.date)\n    const minifiedRecords = getMinifiedRecords(records)\n    return res.json(minifiedRecords)\n  } catch (e) {\n    console.log(e)\n    return res.status(500).json({ mgs: 'Somethig went wrong' })\n  }\n})\n"]},"metadata":{},"sourceType":"module"}
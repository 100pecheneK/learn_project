{"ast":null,"code":"import { database } from './utils/Database';\nimport auth0 from './utils/auth0';\nexport default auth0.requireAuthentication(async (req, res) => {\n  const {\n    user\n  } = await auth0.getSession(req);\n\n  try {\n    let records = await airtableDatabase.getAll({\n      filter: {\n        field: 'userId',\n        value: user.sub\n      }\n    }); // records = records.sort((a, b) => a.fields.date > b.fields.date)\n\n    const minifiedRecords = records;\n    return res.json(minifiedRecords);\n  } catch (e) {\n    console.log(e);\n    return res.status(500).json({\n      mgs: 'Somethig went wrong'\n    });\n  }\n});","map":{"version":3,"sources":["/Users/misha/Documents/learn_project/JS/next-authenticated-todo-app/pages/api/getTodos.js"],"names":["database","auth0","requireAuthentication","req","res","user","getSession","records","airtableDatabase","getAll","filter","field","value","sub","minifiedRecords","json","e","console","log","status","mgs"],"mappings":"AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,eAAeA,KAAK,CAACC,qBAAN,CAA4B,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC7D,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMJ,KAAK,CAACK,UAAN,CAAiBH,GAAjB,CAAvB;;AAEA,MAAI;AACF,QAAII,OAAO,GAAG,MAAMC,gBAAgB,CAACC,MAAjB,CAAwB;AAC1CC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,KAAK,EAAEP,IAAI,CAACQ;AAA/B;AADkC,KAAxB,CAApB,CADE,CAIF;;AACA,UAAMC,eAAe,GAAGP,OAAxB;AACA,WAAOH,GAAG,CAACW,IAAJ,CAASD,eAAT,CAAP;AACD,GAPD,CAOE,OAAOE,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAOZ,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB;AAAEK,MAAAA,GAAG,EAAE;AAAP,KAArB,CAAP;AACD;AACF,CAdc,CAAf","sourcesContent":["import { database } from './utils/Database'\nimport auth0 from './utils/auth0'\n\nexport default auth0.requireAuthentication(async (req, res) => {\n  const { user } = await auth0.getSession(req)\n\n  try {\n    let records = await airtableDatabase.getAll({\n      filter: { field: 'userId', value: user.sub },\n    })\n    // records = records.sort((a, b) => a.fields.date > b.fields.date)\n    const minifiedRecords = records\n    return res.json(minifiedRecords)\n  } catch (e) {\n    console.log(e)\n    return res.status(500).json({ mgs: 'Somethig went wrong' })\n  }\n})\n"]},"metadata":{},"sourceType":"module"}